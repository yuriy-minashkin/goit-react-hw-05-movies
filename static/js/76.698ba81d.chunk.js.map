{"version":3,"file":"static/js/76.698ba81d.chunk.js","mappings":"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","sources":["Services/API.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '076665b0e01f9db198ffaf99145728ee';\nconst API_BASE = 'https://api.themoviedb.org/';\n\nexport const getTrendyMovies = async () => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/trending/movie/day?api_key=${API_KEY}`\n    );\n\n    const trendyMovies = data.data.results.map(\n      ({ id, title, poster_path }) => ({\n        id: id,\n        title: title,\n        poster: poster_path\n          ? `https://image.tmdb.org/t/p/w300${poster_path}`\n          : null,\n      })\n    );\n\n    return trendyMovies;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}?api_key=${API_KEY}`\n    );\n\n    const byIdMovieDetails = {\n      title: data.data.title,\n      image: data.data.poster_path\n        ? `https://image.tmdb.org/t/p/w500${data.data.poster_path}`\n        : null,\n      score: data.data.vote_average,\n      overview: data.data.overview,\n      genres: data.data.genres.map(genre => genre.name).join(', '),\n    };\n\n    return byIdMovieDetails;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n\n    const castInfoArr = data.data.cast.map(\n      ({ name, character, profile_path }) => ({\n        name: name,\n        character: character,\n        profilePhoto: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n\n    return castInfoArr;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    const reviewsArr = data.data.results.map(({ id, author, content }) => {\n      return {\n        id: id,\n        author: author,\n        content: content,\n      };\n    });\n\n    return reviewsArr;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    const queryResult = data.data.results.map(({ id, title, poster_path }) => ({\n      id: id,\n      title: title,\n      poster: poster_path\n        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n        : null,\n    }));\n    return queryResult;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"image\":\"Cast_image__mOsuM\",\"description\":\"Cast_description__uN0VA\",\"text\":\"Cast_text__P2vgu\",\"notFound\":\"Cast_notFound__SweOj\"};","import { useState, useEffect } from 'react';\nimport { getMovieCast } from 'Services/API';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport defaultPhoto from 'images/defaultPhoto.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getMovieCast(movieId);\n      setCast(result);\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className={css.list}>\n          {cast.map(({ name, character, profilePhoto }) => {\n            return (\n              <li className={css.item} key={name}>\n                <img\n                  className={css.image}\n                  src={profilePhoto || defaultPhoto}\n                  alt={name}\n                />\n                <div className={css.description}>\n                  <p className={css.text}>Actor: {name}</p>\n                  <p className={css.text}>Character: {character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2 className={css.notFound}>No actors found</h2>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","API_BASE","getTrendyMovies","axios","data","trendyMovies","results","map","id","title","poster_path","poster","alert","getMovieById","movieId","byIdMovieDetails","image","score","vote_average","overview","genres","genre","name","join","console","error","getMovieCast","castInfoArr","cast","character","profile_path","profilePhoto","getMovieReviews","reviewsArr","author","content","getMovieByName","query","queryResult","useParams","useState","setCast","useEffect","fetchData","result","length","className","css","src","defaultPhoto","alt"],"sourceRoot":""}