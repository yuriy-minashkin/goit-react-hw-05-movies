{"version":3,"file":"static/js/689.dfb8926e.chunk.js","mappings":"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","sources":["Services/API.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '076665b0e01f9db198ffaf99145728ee';\nconst API_BASE = 'https://api.themoviedb.org/';\n\nexport const getTrendyMovies = async () => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/trending/movie/day?api_key=${API_KEY}`\n    );\n\n    const trendyMovies = data.data.results.map(\n      ({ id, title, poster_path }) => ({\n        id: id,\n        title: title,\n        poster: poster_path\n          ? `https://image.tmdb.org/t/p/w300${poster_path}`\n          : null,\n      })\n    );\n\n    return trendyMovies;\n  } catch (error) {\n    alert(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}?api_key=${API_KEY}`\n    );\n\n    const byIdMovieDetails = {\n      title: data.data.title,\n      image: data.data.poster_path\n        ? `https://image.tmdb.org/t/p/w500${data.data.poster_path}`\n        : null,\n      score: data.data.vote_average,\n      overview: data.data.overview,\n      genres: data.data.genres.map(genre => genre.name).join(', '),\n    };\n\n    return byIdMovieDetails;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n\n    const castInfoArr = data.data.cast.map(\n      ({ name, character, profile_path }) => ({\n        name: name,\n        character: character,\n        profilePhoto: profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : null,\n      })\n    );\n\n    return castInfoArr;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n\n    const reviewsArr = data.data.results.map(({ id, author, content }) => {\n      return {\n        id: id,\n        author: author,\n        content: content,\n      };\n    });\n\n    return reviewsArr;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieByName = async query => {\n  try {\n    const data = await axios.get(\n      `${API_BASE}3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    const queryResult = data.data.results.map(({ id, title, poster_path }) => ({\n      id: id,\n      title: title,\n      poster: poster_path\n        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n        : null,\n    }));\n    return queryResult;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"link\":\"MoviesList_link__8rTGX\",\"item\":\"MoviesList_item__eePYv\",\"image\":\"MoviesList_image__oyOXu\",\"title\":\"MoviesList_title__PB2c8\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultMoviePic from 'images/default-movie-pic.png';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className={css.wrapper}>\n        <ul className={css.list}>\n        {movies.map(({ id, title, poster }) => {\n              return (\n              <li className={css.item} key={id}>\n                <Link className={css.link} to={`/movies/${id}`} state={{ from: location }}>\n                  <img className={css.image} src={poster || defaultMoviePic} alt={title} />\n                  <p className={css.title}>{title}</p>\n                </Link>\n              </li>)\n          })}\n        </ul>\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchBar.module.css';\n\nexport const SearchBar = ({ onSearchSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!query) {\n      return;\n    }\n    onSearchSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input className={css.input} type=\"text\" value={query} onChange={handleChange} />\n      <button className={css.button}>Search</button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearchSubmit: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"nothingFound\":\"Movies_nothingFound__Z4ygL\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'Services/API';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('movie');\n\n  useEffect(() => {\n    if (movieQuery === null) {\n      return;\n    }\n\n    getMovieByName(movieQuery).then(result => setMovies(result));\n  }, [movieQuery]);\n  \n  return (\n    <div>\n      <SearchBar onSearchSubmit={query => setSearchParams({ movie: query })} />\n      {movies !== null &&\n        (movies.length > 0 ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <h2 className={css.nothingFound}>\n            Ooops... there is no any movie macthing your search parameters.\n          </h2>\n        ))}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["API_KEY","API_BASE","getTrendyMovies","axios","data","trendyMovies","results","map","id","title","poster_path","poster","alert","getMovieById","movieId","byIdMovieDetails","image","score","vote_average","overview","genres","genre","name","join","console","error","getMovieCast","castInfoArr","cast","character","profile_path","profilePhoto","getMovieReviews","reviewsArr","author","content","getMovieByName","query","queryResult","MoviesList","movies","location","useLocation","className","css","to","state","from","src","defaultMoviePic","alt","SearchBar","onSearchSubmit","useState","setQuery","onSubmit","event","preventDefault","type","value","onChange","target","toLowerCase","trim","setMovies","useSearchParams","searchParams","setSearchParams","movieQuery","get","useEffect","then","result","movie","length"],"sourceRoot":""}